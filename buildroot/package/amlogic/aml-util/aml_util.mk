#############################################################
#
# aml utility
#
#############################################################
AML_UTIL_VERSION = 0.1
AML_UTIL_SITE = $(TOPDIR)/../sources/aml-commonlib/utils
AML_UTIL_SITE_METHOD = local

AML_UTIL_DEPENDENCIES += linux libusb
BR2_PACKAGE_WIFI_FW_WIFI_MODULE = AP6212

BCM := FALSE
RTK := FALSE
MTK := FALSE
CYPRESS := FALSE
AML := FALSE
ICOMM := FALSE

# AP6242 AP6269 AP62x8 not set
BCM_MODULES := bcm40181 bcm40183 bcm43458 bcm4354 bcm4356 bcm4358 AP6212 AP6214 \
	AP6234 AP6255 AP6256 AP62x2 AP6335 AP6441 AP6181 AP6210 AP6330 AP6476 AP6493 AP6398 AP6236 AP6201

BCM_WIFI_MODULE = $(call qstrip,$(BR2_PACKAGE_WIFI_FW_WIFI_MODULE))

ifneq ($(filter $(BCM_WIFI_MODULE),$(BCM_MODULES)),)
	BCM := TRUE
endif

RTK_MODULES := 8189es 8188ftv 8189ftv 8192cu 8192du 8192eu 8192es 8723au 8723bu 8723bs  8723ds 8723du 8811au 8812au 8822bu 8822cs 8188eu 8188gtv

ifneq ($(BR2_PACKAGE_RTK8188EU)$(BR2_PACKAGE_RTK8188GTV)$(BR2_PACKAGE_RTK8189ES)$(BR2_PACKAGE_RTK8188FTV)$(BR2_PACKAGE_RTK8189FTV)$(BR2_PACKAGE_RTK8192CU)$(BR2_PACKAGE_RTK8192DU)$(BR2_PACKAGE_RTK8192EU)$(BR2_PACKAGE_RTK8192ES)$(BR2_PACKAGE_RTK8723AU)$(BR2_PACKAGE_RTK8723BU)$(BR2_PACKAGE_RTK8723BS)$(BR2_PACKAGE_RTK8723DS)$(BR2_PACKAGE_RTK8723DU)$(BR2_PACKAGE_RTK8822BU)$(BR2_PACKAGE_RTK8822CS)$(BR2_PACKAGE_RTK8811AU)$(BR2_PACKAGE_RTK8812AU),)
	RTK := TRUE
endif

# cypress wifi
CYPRESS_MODULES := cyw43438 cyw43455

CYPRESS_WIFI_MODULE = $(call qstrip,$(BR2_PACKAGE_WIFI_FW_WIFI_MODULE))

ifneq ($(filter $(CYPRESS_WIFI_MODULE),$(CYPRESS_MODULES)),)
	CYPRESS := TRUE
endif

# mtk wifi
MTK_MODULES := mt7661

MTK_WIFI_MODULE = $(call qstrip,$(BR2_PACKAGE_WIFI_FW_WIFI_MODULE))

ifneq ($(BR2_PACKAGE_MTK7661),)
	MTK := TRUE
endif

# amlogic wifi
AML_MODULES := w155s1

ifneq ($(BR2_PACKAGE_AML_WIFI),)
	AML := TRUE
endif

# icomm wifi
ICOMM_MODULES := sv6158
ICOMM_WIFI_MODULE = $(call qstrip,$(BR2_PACKAGE_WIFI_FW_WIFI_MODULE))
ifneq ($(filter $(ICOMM_WIFI_MODULE),$(ICOMM_MODULES)),)
	ICOMM := TRUE
endif

AML_UTIL_PRIV_FLAGS = $(TARGET_CFLAGS) -I$(STAGING_DIR)/usr/include -lusb-1.0

ifeq ($(BCM), TRUE)
	AML_UTIL_PRIV_FLAGS += -DBROADCOM_MODULES_PATH=/lib/modules/$(LINUX_VERSION_PROBED)/kernel/broadcom/wifi -DBROADCOM_CONFIG_PATH=/etc/wifi
endif

ifeq ($(RTK), TRUE)
	AML_UTIL_PRIV_FLAGS += -DRTK_WIFI_MODULE -DREALTEK_MODULES_PATH=/lib/modules/$(LINUX_VERSION_PROBED)/kernel/realtek/wifi
endif

ifeq ($(MTK), TRUE)
	AML_UTIL_PRIV_FLAGS += -DMTK_WIFI_MODULE -DMTK_MODULES_PATH=/lib/modules/$(LINUX_VERSION_PROBED)/kernel/mtk/wifi
endif

ifeq ($(AML), TRUE)
	AML_UTIL_PRIV_FLAGS += -DAMLOGIC_MODULES_PATH=/lib/modules/$(LINUX_VERSION_PROBED)/kernel/amlogic/wifi
endif

ifeq ($(CYPRESS), TRUE)
	AML_UTIL_PRIV_FLAGS += -DCYPRESS_WIFI_MODULE=$(CYPRESS_WIFI_MODULE) -DCYPRESS_MODULES_PATH=/lib/modules/$(LINUX_VERSION_PROBED)/kernel/cypress/wifi -DCYPRESS_CONFIG_PATH=/etc/wifi
endif

ifeq ($(ICOMM), TRUE)
	AML_UTIL_PRIV_FLAGS += -DICOMM_MODULES_PATH=/lib/modules/$(LINUX_VERSION_PROBED)/kernel/icomm/wifi -DICOMM_CONFIG_PATH=/etc/wifi/icomm
endif

ifneq ($(BR2_PACKAGE_MRVL_WIFIBT),)
	AML_UTIL_PRIV_FLAGS += -DMRVL_MODULES_PATH=/lib/modules/$(LINUX_VERSION_PROBED)/kernel/mrvl
endif

ifneq ($(BR2_PACKAGE_QUALCOMM_WIFI),)
	AML_UTIL_PRIV_FLAGS += -DQCA_MODULES_PATH=/lib/modules/$(LINUX_VERSION_PROBED)/kernel/qualcomm/wifi
endif

ifeq ($(BR2_INPUT_EVENTD_FILTER_POWERKEY), y)
	AML_UTIL_PRIV_FLAGS += -DFILTER_POWERKEY
endif

define AML_UTIL_BUILD_CMDS
	$(TARGET_CONFIGURE_OPTS) $(MAKE) -C $(@D) CFLAGS="$(AML_UTIL_PRIV_FLAGS)" USE_SIMULATE_KEY=$(BR2_AML_UTIL_SIMULATE_KEY) USE_AUTO_SHUTDOWN=$(BR2_UTILS_AUTO_SHUTDOWN) USE_BATTERY_MONITOR=$(BR2_UTILS_BATTERY_MONITOR) all
	if [ "$(BR2_UTILS_IOCTL)" == "y" ]; then \
		$(TARGET_CONFIGURE_OPTS) $(MAKE) -C $(@D) ioctl; \
	fi
endef

define AML_UTIL_INSTALL_TARGET_CMDS
	$(TARGET_CONFIGURE_OPTS) $(MAKE) CC=$(TARGET_CC) -C $(@D) USE_SIMULATE_KEY=$(BR2_AML_UTIL_SIMULATE_KEY) USE_AUTO_SHUTDOWN=$(BR2_UTILS_AUTO_SHUTDOWN) USE_BATTERY_MONITOR=$(BR2_UTILS_BATTERY_MONITOR) install
	if [ "$(BR2_UTILS_IOCTL)" == "y" ]; then \
		$(TARGET_CONFIGURE_OPTS) $(MAKE) CC=$(TARGET_CC) -C $(@D) install_ioctl; \
	fi
endef

$(eval $(generic-package))
